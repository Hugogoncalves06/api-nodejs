version: '3.8'

services:
  # ===== API Node.js (MongoDB) =====
  api-nodejs:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - MONGODB_URI=mongodb://mongo:27017/blog-api
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_EXPIRES_IN=24h
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
    depends_on:
      - mongo
    volumes:
      - ./logs:/usr/src/app/logs
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
    networks:
      - app-network

  mongo:
    image: mongo:6.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=blog-api
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped
    networks:
      - app-network

  # ===== MongoDB Express (Interface web pour MongoDB) =====
  mongo-express:
    image: mongo-express:latest
    restart: always
    ports:
      - "8082:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME=
      - ME_CONFIG_MONGODB_ADMINPASSWORD=
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=password
      - ME_CONFIG_MONGODB_AUTH_DATABASE=blog-api
    depends_on:
      - mongo
    networks:
      - app-network

  # ===== API Python (MySQL) =====
  api-python:
    build:
      context: ../Backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=password
      - MYSQL_DATABASE=users_db
      - FLASK_ENV=development
      - SECRET_KEY=your_secret_key
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - app-network

  # ===== Base de donn√©es MySQL =====
  mysql:
    image: mysql:9.2
    restart: always
    ports:
      - "3306:3306"
    volumes:
      - ../Backend/mysql_data/:/docker-entrypoint-initdb.d/
      - mysql_data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=users_db
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u$$MYSQL_USER", "-p$$MYSQL_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - app-network

  # ===== phpMyAdmin =====
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - "8081:80"
    environment:
      - PMA_HOST=mysql
      - MYSQL_ROOT_PASSWORD=password
    depends_on:
      - mysql
    networks:
      - app-network

  # ===== Frontend React =====
  frontend:
    build:
      context: ../Frontend
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      - REACT_APP_NODEJS_API_URL=http://localhost:3000
      - REACT_APP_PYTHON_API_URL=http://localhost:8000
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ../Frontend:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - api-nodejs
      - api-python
    networks:
      - app-network

volumes:
  mongo_data:
  mysql_data:
    driver: local

networks:
  app-network:
    driver: bridge 